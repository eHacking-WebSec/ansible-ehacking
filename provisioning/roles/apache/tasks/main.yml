---

- name: Change HTTP port in /etc/apache2/ports.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/ports.conf
    regexp: '^Listen 80'
    line: 'Listen 9090'
  notify: restart apache
  tags: apache

- name: Change HTTPS port in /etc/apache2/ports.conf
  ansible.builtin.replace:
    path: /etc/apache2/ports.conf
    regexp: 'Listen 443'
    replace: 'Listen 9443'
  notify: restart apache
  tags: apache

# - name: Change ports in /etc/apache2/sites-available/default-ssl.conf
#   ansible.builtin.replace:
#     path: /etc/apache2/sites-available/default-ssl.conf
#     regexp: '(<VirtualHost.*:)(443)(>)'
#     replace: '\g<1>9443\g<3>'
#     backup: yes
#   notify: restart apache
#   tags: apache

# - name: Generate SSL certificate
#   ansible.builtin.command:
#     cmd: make-ssl-cert generate-default-snakeoil --force-overwrite
#     # creates: /etc/ssl/private/localhost-ssl-cert.key
#   notify: restart apache
#   tags: apache

- name: Create directories for the certificate and key
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "root"
    group: "root"
  with_items:
    - /etc/ssl/certs
    - /etc/ssl/private
  tags: apache

- name: Generate the private key
  command: openssl genrsa -out /etc/ssl/private/localhost-ssl-cert.key 2048
  tags: apache

- name: Create a configuration file for the certificate request
  copy:
    dest: /tmp/openssl.cnf
    content: |
      [ req ]
      default_bits       = 2048
      distinguished_name = req_distinguished_name
      req_extensions     = req_ext
      x509_extensions    = v3_req
      prompt             = no

      [ req_distinguished_name ]
      CN = localhost

      [ req_ext ]
      subjectAltName = @alt_names

      [ v3_req ]
      subjectAltName = @alt_names

      [ alt_names ]
      DNS.1 = localhost
      DNS.2 = attacker.com
      DNS.3 = malicious.com
    mode: '0755'
    owner: "root"
    group: "root"
  tags: apache

- name: Generate the self-signed certificate in PEM format
  command: >
    openssl req -x509 -nodes -days 365
    -key /etc/ssl/private/localhost-ssl-cert.key
    -out /etc/ssl/certs/localhost-ssl-cert.pem
    -config /tmp/openssl.cnf
  tags: apache

- name: Clean up the temporary configuration file
  file:
    path: /tmp/openssl.cnf
    state: absent
  tags: apache

- name: Enable Apache2 ssl module
  ansible.builtin.command:
    cmd: a2enmod ssl
  notify: restart apache
  tags: apache

- name: Create the SSL configuration file for Apache
  copy:
    dest: /etc/apache2/sites-available/default-ssl.conf
    content: |
      <IfModule mod_ssl.c>
          <VirtualHost _default_:9443>
              ServerAdmin webmaster@localhost
              
              DocumentRoot /var/www/html

              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined

              SSLEngine on

              SSLCertificateFile      /etc/ssl/certs/localhost-ssl-cert.pem
              SSLCertificateKeyFile   /etc/ssl/private/localhost-ssl-cert.key

              <FilesMatch "\.(cgi|shtml|phtml|php)$">
                  SSLOptions +StdEnvVars
              </FilesMatch>
              <Directory /usr/lib/cgi-bin>
                  SSLOptions +StdEnvVars
              </Directory>
          </VirtualHost>
      </IfModule>
  notify: restart apache

- name: Enable Apache2 default-ssl site
  ansible.builtin.command:
    cmd: a2ensite default-ssl
  notify: restart apache
  tags: apache

- name: Copy Certficate to /usr/local/share/ca-certificates/
  ansible.builtin.copy:
    src: /etc/ssl/certs/localhost-ssl-cert.pem
    remote_src: yes
    dest: /usr/local/share/ca-certificates/
    owner: "root"
    group: "root"
    mode: '0644'
  notify:
    - update CA certificates
    - chromium update certificates
    - firefox update certificates
  tags: apache

- name: Ensure is enabled and started
  ansible.builtin.service:
    name: apache2
    enabled: yes
    state: started
  tags: apache